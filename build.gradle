apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin:'application'

sourceCompatibility = 1.5
version = '1.0'
jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart', 'Implementation-Version': version
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.+'
}

task buildJniLib(type:Exec) {
  workingDir './src/native/jni/'

  //on windows:
//  commandLine 'cmd', '/c', 'stop.bat'

  //on linux
    //args = ['-I"$JAVA_HOME/include" -I"$JAVA_HOME/include/linux" -shared -o libgetdnsconnector.so -fPIC -I/usr/local/include -L/usr/local/lib -lgetdns -lldns GetDNS.c']
    commandLine 'gcc', '-I'+javahome+'/include', '-I'+javahome+'/include/linux', '-shared','-o',System.getProperty("user.dir")+'/build/libs/libgetdnsconnector.so','-fPIC','-I/usr/local/include','-L/usr/local/lib','-lgetdns','-lldns','GetDNS.c'

  //store the output instead of printing to the console:
  standardOutput = new ByteArrayOutputStream()

  //extension method stopTomcat.output() can be used to obtain the output:
  ext.output = {
    return standardOutput.toString()
  }
}

task printBuildInfo {
    print buildJniLib.output()
}


test {
    systemProperties 'property': 'value'
    jvmArgs '-Djava.library.path='+System.getProperty("user.dir")+'/build/libs'
    environment "LD_LIBRARY_PATH", "/usr/local/lib"
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}
//mainClassName = "com.verisign.getdns.wrapper.GetDNS"
//applicationDefaultJvmArgs = ["-Djava.library.path=/home/prangana/dev/Engg/explore/getdns/getdns/src/test"]
//mainClassName = "com.verisign.getdns.wrapper.GetDNS"
