apply plugin: 'java'
apply plugin: 'eclipse'


sourceCompatibility = 1.7
version = '1.0'
jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart', 'Implementation-Version': version
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.+'
}

sourceSets {
    examples {
    	java
    	compileClasspath += main.output
    	runtimeClasspath += main.output
    }
}

task buildJniLib(type:Exec) {
  if(!new File(javahome+'/include/jni.h').exists()) {
    throw new InvalidUserDataException("Please configure javahome in gradle.properties")
  }

  workingDir './src/native/jni/'

    if(System.properties['os.name'].toLowerCase().contains('mac')){
        commandLine 'gcc', '-I'+javahome+'/include', '-I'+javahome+'/include/darwin', '-shared','-o',System.getProperty("user.dir")+'/build/libs/libgetdnsconnector.dylib','-fPIC','-I/usr/local/include','-L/usr/local/lib','-lgetdns','-lldns','-lidn', '-levent','-lgetdns_ext_event', 'java_util.c', 'GetDNSContext.c', 'GetDNS_common.c', 'getdns_util.c'
    }
    else {
            commandLine 'gcc', '-I'+javahome+'/include', '-I'+javahome+'/include/linux', '-shared','-o',System.getProperty("user.dir")+'/build/libs/libgetdnsconnector.so','-fPIC','-I/usr/local/include','-L/usr/local/lib','-lgetdns','-lldns', '-levent','-lgetdns_ext_event', 'java_util.c', 'GetDNSContext.c', 'getdns_util.c'
    }


  standardOutput = new ByteArrayOutputStream()
  ext.output = {
    return standardOutput.toString()
  }
}

task runExample(type:JavaExec)  {
    classpath = sourceSets.main.runtimeClasspath + sourceSets.examples.runtimeClasspath 
    jvmArgs '-Djava.library.path='+System.getProperty("user.dir")+'/build/libs'
    environment "LD_LIBRARY_PATH", "/usr/local/lib"
    doFirst {
    main = System.getProperty("example")
    if(System.getProperty("example") == null || System.getProperty("args") == null){
        println "Usage: -Dexample=<exampleName> -Dargs=\"<args>\"  runExample"
    	if(main == null || main == "") {
     		println ("Please provide one of the below exampleName to execute")
			sourceSets.examples.java.each { File file ->
			    println file.name.replace(".java","")
			}
		}
        else
            println "No arguments provided"
    throw new InvalidUserDataException("Insufficient arguments provided")
     
   }
   main = "com.verisign.getdns.example."+main
    if ( System.getProperty("args") != null) {  
        args= Eval.me(System.getProperty("args"))  
    }
    }
}
runExample.dependsOn buildJniLib
buildJniLib.dependsOn assemble

task printBuildInfo << {
    print buildJniLib.output()
}


test {
    jvmArgs '-Djava.library.path='+System.getProperty("user.dir")+'/build/libs'
    environment "LD_LIBRARY_PATH", "/usr/local/lib"
}


